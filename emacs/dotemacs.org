#+title: Dotemacs
#+PROPERTY: header-args:emacs-lisp :tangle ~/.emacs :mkdirp yes

* Dotemacs
** Package setup

This bootstraps [[https://github.com/radian-software/straight.el][straight.el]] and [[https://github.com/jwiegley/use-package][use-package]] to install packages either from a package repository or from Github. I got the setup from [[https://jeffkreeftmeijer.com/emacs-straight-use-package/][here]], mostly.

#+begin_src emacs-lisp
  (setq package-enable-at-startup nil)
  (defvar bootstrap-version)
  (let ((bootstrap-file (expand-file-name "straight/repos/straight.el/bootstrap.el"
					  user-emacs-directory))
	(bootstrap-version 6))
    (unless (file-exists-p bootstrap-file)
      (with-current-buffer (url-retrieve-synchronously
			    "https://raw.githubusercontent.com/radian-software/straight.el/develop/install.el" 'silent 'inhibit-cookies)
  (goto-char (point-max))
  (eval-print-last-sexp)))
  (load bootstrap-file nil 'nomessage))
  
  (straight-use-package 'use-package)
  (require 'use-package)

  (use-package
      straight
      :custom (straight-use-package-by-default t))
#+end_src

** Literate config setup

#+begin_src emacs-lisp
  (org-babel-do-load-languages 'org-babel-load-languages '((emacs-lisp . t)
							   (python . t)))

  (push '("conf-unix" . conf-unix) org-src-lang-modes)

  ;; Automatically tangle our Emacs.org config file when we save it
  (defun efs/org-babel-tangle-config ()
    (when (string-equal (buffer-file-name)
			(expand-file-name "~/Code/dotfiles/emacs/dotemacs.org"))
      ;; Dynamic scoping to the rescue
      (let ((org-confirm-babel-evaluate nil))
	(org-babel-tangle))))

  (add-hook 'org-mode-hook (lambda ()
			     (add-hook 'after-save-hook #'efs/org-babel-tangle-config)))
  (add-hook 'after-save-hook (lambda ()
			       (load-file (expand-file-name "~/.emacs"))))
#+end_src

** Git config

#+begin_src emacs-lisp
  (use-package magit)
  (use-package ghub)
#+end_src

** Code formatting

*** Elisp

#+begin_src emacs-lisp
  (use-package elisp-format)
#+end_src

** Web mode

#+begin_src emacs-lisp
  (use-package web-mode :ensure t)
  (add-to-list 'auto-mode-alist '("\\.njk\\'" . web-mode))
#+end_src

** Org

#+begin_src emacs-lisp
  (global-set-key (kbd "C-c l") #'org-store-link)
  (global-set-key (kbd "C-c a") #'org-agenda)
  (global-set-key (kbd "C-c c") #'org-capture)
#+end_src

** Evil ðŸ¤˜

#+begin_src emacs-lisp
  (setq evil-want-keybinding nil)
  (use-package
    evil
    :config (evil-mode 1))
  (use-package
    evil-commentary
    :ensure t)
  (evil-commentary-mode 1)
  (use-package
    evil-surround
    :config (global-evil-surround-mode 1))
  (use-package
    simpleclip)
  (simpleclip-mode 1)

  ;; Make cmd-v work to paste from system clipboard
  ;; https://github.com/rolandwalker/simpleclip/issues/1
  (setq mac-option-modifier 'meta)
  (setq mac-command-modifier 'super)
  (setq mac-pass-command-to-system nil)
  (use-package
    evil-collection)
#+end_src

** UI & Theme

TODO Get ligatures working

Turn off most UI chrome.

#+begin_src emacs-lisp
  (menu-bar-mode -1)
  (tool-bar-mode -1)
  (scroll-bar-mode -1)
#+end_src

#+begin_src emacs-lisp
  (set-frame-font "JuliaMono 14" nil t)

  (use-package
    doom-themes
    :config
    ;; Global settings (defaults)
    (setq doom-themes-enable-bold t ; if nil, bold is universally disabled
    doom-themes-enable-italic t) ; if nil, italics is universally disabled
    (load-theme 'doom-one t)

    ;; Enable flashing mode-line on errors
    (doom-themes-visual-bell-config)
    ;; Corrects (and improves) org-mode's native fontification.
    (doom-themes-org-config))

  (use-package
    doom-modeline
    :init (doom-modeline-mode 1))

  (use-package all-the-icons)
#+end_src

*** Org Mode Appearance

Org mode needs some extra attention to really shine. This adds fancy bullets.

#+begin_src emacs-lisp
  ;; wrap lines depending on window size
  (add-hook 'org-mode-hook 'visual-line-mode) 
#+end_src

Also set custom faces and line heights for different levels of indentation. These settings are from [[https://zzamboni.org/post/beautifying-org-mode-in-emacs/][here]] but will probably change.

#+begin_src emacs-lisp
  (use-package org-modern)
  (global-org-modern-mode)
#+end_src
